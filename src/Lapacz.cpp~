#include "Lapacz.hpp"


Lapacz::Kamery::Kamery(int nrL,int nrP,
		       cv::Mat &matL,cv::Mat &matP,
		       boost::mutex *mtx):kamL(nrL),kamR(nrP){
 
  if(!kamL.isOpened())
    throw "Nieudane otwarcie lewej kamery";
  if(!kamR.isOpened())
    throw "Nieudane otwarcie prawej kamery";    
  klL=matL;
  klR=matP;
  mut=mtx;
}

void Lapacz::Kamery::operator()(){
  while(!boost::this_thread::interruption_requested()){
    mut->lock();
    kamL>>klL;
    kamR>>klR;
    mut->unlock();
  }
}
    
Lapacz::Lapacz(int nrL,int nrR){
  mut=new boost::mutex;
  kams=Kamery(nrL,nrR,klL,klR,mut);
  wat=new boost::thread(kams);
}

Lapacz::~Lapacz(){
  wat->interrupt();
  delete mut;
  wat->join();
}

void Lapacz::stopKlatka(cv::Mat& lewa,cv::Mat& prawa){
  mut->lock();
  lewa=klL.clone();
  prawa=klR.clone();
  mut->unlock();
}


int main(){
  Lapacz lap(1,2);
  return 0;
}
